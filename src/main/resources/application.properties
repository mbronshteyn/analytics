# default
spring.kafka.bootstrap-servers=kafka1:9093
spring.cloud.stream.kafka.streams.binder.brokers= kafka1:9093

spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.mms = 1000
spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde = org.apache.kafka.common.serialization.Serdes$StringSerde
spring.cloud.stream.kafka.streams.binder.application-id=analytics

# page view out
spring.cloud.stream.bindings.pvout.destination=pvs
spring.cloud.stream.bindings.pvout.producer.header-mode=raw

# page view in
spring.cloud.stream.bindings.pvin.destination=pvs
spring.cloud.stream.bindings.pvin.consumer.header-mode=raw

# archive in
spring.cloud.stream.bindings.archiveIn.destination=ARCHIVE_DATA_OUTPUT
spring.cloud.stream.bindings.archiveIn.consumer.header-mode=raw

## page count out
#spring.cloud.stream.bindings.pcout.destination=pcs
#spring.cloud.stream.bindings.pcout.producer.use-native-encoding=true
#spring.cloud.stream.kafka.streams.bindings.pcout.producer.key-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
#spring.cloud.stream.kafka.streams.bindings.pcout.producer.value-serde=org.apache.kafka.common.serialization.Serdes$StringSerde
#
## page count in
#spring.cloud.stream.bindings.pcin.destination=pcs
#spring.cloud.stream.bindings.pcin.consumer.use-native-decoding=true
#spring.cloud.stream.bindings.pcin.group=pcs
#spring.cloud.stream.bindings.pcin.content-type=application/json
#spring.cloud.stream.bindings.pcin.consumer.header-mode=raw
#spring.cloud.stream.kafka.streams.bindings.pcin.consumer.key-serde=org.apache.kafka.common.serialization.Serdes$LongSerde
#spring.cloud.stream.kafka.streams.bindings.pcin.consumer.value-serde=org.apache.kafka.common.serialization.Serdes$StringSerde




